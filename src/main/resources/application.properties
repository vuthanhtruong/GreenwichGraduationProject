# Application Configuration
spring.application.name=${APP_NAME:demo}
spring.main.lazy-initialization=${SPRING_LAZY_INITIALIZATION:true}
spring.main.scan-packages=${SPRING_SCAN_PACKAGES:com.example.demo.service,com.example.demo.repository}
debug=${DEBUG_ENABLED:false}

# Server Configuration
server.address=${SERVER_ADDRESS:0.0.0.0}
server.port=${SERVER_PORT:8080}
server.servlet.context-path=${SERVER_CONTEXT_PATH:/}
server.error.whitelabel.enabled=${SERVER_ERROR_WHITELABEL_ENABLED:true}
server.servlet.session.persistent=${SERVER_SESSION_PERSISTENT:false}
server.shutdown=${SERVER_SHUTDOWN:graceful}
spring.lifecycle.timeout-per-shutdown-phase=${SERVER_SHUTDOWN_TIMEOUT:20s}

# Tomcat Configuration
server.tomcat.accesslog.enabled=${TOMCAT_ACCESS_LOG_ENABLED:true}
server.tomcat.accesslog.directory=${TOMCAT_ACCESS_LOG_DIRECTORY:logs}
server.tomcat.accesslog.file-date-format=${TOMCAT_ACCESS_LOG_DATE_FORMAT:yyyy-MM-dd}
server.tomcat.accesslog.prefix=${TOMCAT_ACCESS_LOG_PREFIX:access_log}
server.tomcat.accesslog.suffix=${TOMCAT_ACCESS_LOG_SUFFIX:.log}
server.tomcat.max-threads=${TOMCAT_MAX_THREADS:200}
server.tomcat.min-spare-threads=${TOMCAT_MIN_SPARE_THREADS:10}

# Thymeleaf Configuration
spring.thymeleaf.prefix=${THYMELEAF_PREFIX:classpath:/templates/}
spring.thymeleaf.suffix=${THYMELEAF_SUFFIX:.html}
spring.thymeleaf.mode=${THYMELEAF_MODE:HTML}
spring.thymeleaf.encoding=${THYMELEAF_ENCODING:UTF-8}
spring.thymeleaf.cache=${THYMELEAF_CACHE_ENABLED:true}

# File Upload Configuration
spring.servlet.multipart.enabled=${MULTIPART_ENABLED:true}
spring.servlet.multipart.file-size-threshold=${MULTIPART_FILE_SIZE_THRESHOLD:2KB}
spring.servlet.multipart.max-file-size=${MULTIPART_MAX_FILE_SIZE:50MB}
spring.servlet.multipart.max-request-size=${MULTIPART_MAX_REQUEST_SIZE:55MB}
file.upload-dir=${FILE_UPLOAD_DIRECTORY:C:/syllabuses}
upload.dir=${UPLOAD_DIRECTORY:C:/uploads}

# DataSource Configuration (HikariCP)
spring.datasource.url=${DATASOURCE_URL:jdbc:mysql://localhost:3306/demo}
spring.datasource.username=${DATASOURCE_USERNAME:root}
spring.datasource.password=${DATASOURCE_PASSWORD:123456}
spring.datasource.driver-class-name=${DATASOURCE_DRIVER:com.mysql.cj.jdbc.Driver}
spring.datasource.hikari.max-lifetime=${DATASOURCE_HIKARI_MAX_LIFETIME:1800000}
spring.datasource.hikari.idle-timeout=${DATASOURCE_HIKARI_IDLE_TIMEOUT:300000}
spring.datasource.hikari.maximum-pool-size=${DATASOURCE_HIKARI_MAX_POOL_SIZE:10}
spring.datasource.hikari.minimum-idle=${DATASOURCE_HIKARI_MIN_IDLE:2}
spring.datasource.hikari.connection-timeout=${DATASOURCE_HIKARI_CONNECTION_TIMEOUT:300000}

# JPA & Hibernate Configuration
spring.jpa.hibernate.ddl-auto=${JPA_HIBERNATE_DDL_AUTO:update}
spring.jpa.show-sql=${JPA_SHOW_SQL:false}
spring.jpa.properties.hibernate.format_sql=${JPA_HIBERNATE_FORMAT_SQL:false}
spring.jpa.hibernate.naming.physical-strategy=${JPA_HIBERNATE_NAMING_PHYSICAL_STRATEGY:org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl}
spring.jpa.hibernate.naming.implicit-strategy=${JPA_HIBERNATE_NAMING_IMPLICIT_STRATEGY:org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyJpaImpl}
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=${JPA_HIBERNATE_LOB_NON_CONTEXTUAL_CREATION:true}
spring.jpa.open-in-view=${JPA_OPEN_IN_VIEW:false}
spring.jpa.properties.hibernate.cache.use_second_level_cache=${JPA_HIBERNATE_SECOND_LEVEL_CACHE_ENABLED:false}
spring.jpa.properties.hibernate.cache.region.factory_class=${JPA_HIBERNATE_CACHE_REGION_FACTORY:org.hibernate.cache.jcache.JCacheRegionFactory}
spring.jpa.properties.hibernate.javax.cache.provider=${JPA_HIBERNATE_CACHE_PROVIDER:org.ehcache.jsr107.EhcacheCachingProvider}
spring.jpa.properties.hibernate.javax.cache.missing_cache_strategy=${JPA_HIBERNATE_CACHE_MISSING_STRATEGY:create}

# Mail Configuration (Gmail SMTP)
spring.mail.host=${MAIL_HOST:smtp.gmail.com}
spring.mail.port=${MAIL_PORT:587}
spring.mail.username=${MAIL_USERNAME:vuthanhtruong1280@gmail.com}
spring.mail.password=${MAIL_PASSWORD:zmtvwgnoysvmsjyo}
spring.mail.properties.mail.smtp.auth=${MAIL_SMTP_AUTH_ENABLED:true}
spring.mail.properties.mail.smtp.starttls.enable=${MAIL_SMTP_STARTTLS_ENABLED:true}

# Google Cloud Platform Configuration
spring.cloud.gcp.project-id=${GCP_PROJECT_ID:your-gcp-project-id}
spring.cloud.gcp.storage.bucket-name=${GCP_STORAGE_BUCKET_NAME:your-gcs-bucket-name}
google.api.credentials=${GOOGLE_API_CREDENTIALS_PATH:/path/to/credentials.json}

# OAuth2 Google Configuration
spring.security.oauth2.client.registration.google.client-id=${GOOGLE_OAUTH2_CLIENT_ID:377993789953-80obi73tkrcche2h8es9nntnr4i0ocf4.apps.googleusercontent.com}
spring.security.oauth2.client.registration.google.client-secret=${GOOGLE_OAUTH2_CLIENT_SECRET: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}
spring.security.oauth2.client.registration.google.redirect-uri=${GOOGLE_OAUTH2_REDIRECT_URI:http://localhost:8080/login/oauth2/code/google}
spring.security.oauth2.client.registration.google.scope=${GOOGLE_OAUTH2_SCOPE:openid,profile,email}
spring.security.oauth2.client.provider.google.authorization-uri=${GOOGLE_OAUTH2_AUTH_URI:https://accounts.google.com/o/oauth2/v2/auth}
spring.security.oauth2.client.provider.google.token-uri=${GOOGLE_OAUTH2_TOKEN_URI:https://www.googleapis.com/oauth2/v4/token}
spring.security.oauth2.client.provider.google.user-info-uri=${GOOGLE_OAUTH2_USER_INFO_URI:https://www.googleapis.com/oauth2/v3/userinfo}
spring.security.oauth2.client.provider.google.jwk-set-uri=${GOOGLE_OAUTH2_JWK_URI:https://www.googleapis.com/oauth2/v3/certs}
spring.security.oauth2.client.provider.google.user-name-attribute=${GOOGLE_OAUTH2_USERNAME_ATTRIBUTE:sub}

# Static Resources Configuration
spring.web.resources.static-locations=${STATIC_RESOURCES_LOCATIONS:classpath:/static/login/,classpath:/static/Staff/,classpath:/static/StudentsList/,classpath:/static/Class/,classpath:/static/DefaultAvatar/}
spring.web.resources.cache.period=${STATIC_RESOURCES_CACHE_PERIOD:3600}
spring.web.resources.chain.strategy.content.enabled=${STATIC_RESOURCES_CONTENT_STRATEGY_ENABLED:true}
spring.web.resources.chain.strategy.content.paths=${STATIC_RESOURCES_CONTENT_PATHS:/**}

# MVC Configuration
spring.mvc.trailing-slash.matching=${MVC_TRAILING_SLASH_MATCHING:true}
spring.mvc.async.request-timeout=${MVC_ASYNC_REQUEST_TIMEOUT:300000}

# FacePlusPlus API Configuration
faceplusplus.api.key=${FACEPLUSPLUS_API_KEY:lDjG0cUY_UpZGb45HBGKMM0ekM4CqRYv}
faceplusplus.api.secret=${FACEPLUSPLUS_API_SECRET:tpugTFVboS3YeRTiklf_CgKZigHwFYYg}

# Logging Configuration
logging.level.org.springframework=${LOG_LEVEL_SPRING:INFO}
logging.level.org.springframework.web=${LOG_LEVEL_SPRING_WEB:INFO}
logging.level.org.hibernate.SQL=${LOG_LEVEL_HIBERNATE_SQL:INFO}
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=${LOG_LEVEL_HIBERNATE_BINDER:TRACE}
logging.level.org.hibernate.orm.cache=${LOG_LEVEL_HIBERNATE_CACHE:WARN}